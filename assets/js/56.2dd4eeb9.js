(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{533:function(v,_,e){"use strict";e.r(_);var t=e(4),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[v._v("#")]),v._v(" 组件")]),v._v(" "),e("h4",{attrs:{id:"组件特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件特点"}},[v._v("#")]),v._v(" 组件特点")]),v._v(" "),e("ul",[e("li",[v._v("复用 方便维护")]),v._v(" "),e("li",[v._v("拆分方便，功能独立")]),v._v(" "),e("li",[v._v("组件间作用域隔离，互不干扰")])]),v._v(" "),e("h4",{attrs:{id:"组件数据来源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件数据来源"}},[v._v("#")]),v._v(" 组件数据来源")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("data")])]),v._v(" "),e("li",[e("code",[v._v("props")])]),v._v(" "),e("li",[e("code",[v._v("computed")])]),v._v(" "),e("li",[e("code",[v._v("watch")])])]),v._v(" "),e("h4",{attrs:{id:"组件生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件生命周期"}},[v._v("#")]),v._v(" 组件生命周期")]),v._v(" "),e("h6",{attrs:{id:"生命周期函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期函数"}},[v._v("#")]),v._v(" 生命周期函数")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("beforeCreate")]),v._v(" "),e("ul",[e("li",[v._v("初始化事件方法，比如 "),e("code",[v._v("this")]),v._v(" "),e("code",[v._v("$on")]),v._v(" "),e("code",[v._v("$emit")])]),v._v(" "),e("li",[v._v("最先调用，一般不会做太多功能")])])]),v._v(" "),e("li",[e("code",[v._v("created")]),v._v(" "),e("ul",[e("li",[v._v("观察响应式的数据变化")]),v._v(" "),e("li",[v._v("还没有"),e("code",[v._v("this.$el")]),v._v("，无法获取真实DOM元素")]),v._v(" "),e("li",[v._v("可以用来做数据请求")])])]),v._v(" "),e("li",[e("code",[v._v("beforMount")]),v._v(" "),e("ul",[e("li",[v._v("检查有没有"),e("code",[v._v("template")]),v._v("属性，如果没有这个钩子函数不会执行")]),v._v(" "),e("li",[v._v("如果有"),e("code",[v._v("template")]),v._v("属性，会把"),e("code",[v._v("template")]),v._v("渲染成一个"),e("code",[v._v("render")]),v._v("函数")]),v._v(" "),e("li",[v._v("这个方法基本用不到")]),v._v(" "),e("li",[v._v("内容渲染顺序: "),e("code",[v._v("render")]),v._v(" -> "),e("code",[v._v("template")]),v._v(" -> 元素中的内容")])])]),v._v(" "),e("li",[e("code",[v._v("mounted")]),v._v(" "),e("ul",[e("li",[v._v("DOM挂载后执行")]),v._v(" "),e("li",[v._v("可以获取真实元素"),e("code",[v._v("this.$el")])]),v._v(" "),e("li",[v._v("可以操作DOM")])])]),v._v(" "),e("li",[e("code",[v._v("beforeUpdate")]),v._v(" "),e("ul",[e("li",[v._v("更新DOM元素前执行")]),v._v(" "),e("li",[v._v("更新之前可以再修改一次数据")])])]),v._v(" "),e("li",[e("code",[v._v("updated")]),v._v(" "),e("ul",[e("li",[v._v("更新之后执行")]),v._v(" "),e("li",[v._v("这里不能更新数据，否则会导致死循环")])])]),v._v(" "),e("li",[e("code",[v._v("beforeDestroy")]),v._v(" "),e("ul",[e("li",[v._v("销毁前执行")]),v._v(" "),e("li",[v._v("一般用来清除定时器，解除绑定的方法事件")])])]),v._v(" "),e("li",[e("code",[v._v("destroyed")]),v._v(" "),e("ul",[e("li",[v._v("销毁后执行")])])])]),v._v(" "),e("blockquote",[e("p",[v._v("只要是操作DOM元素，就要在"),e("code",[v._v("$nextTick")]),v._v("中执行")])]),v._v(" "),e("h6",{attrs:{id:"执行顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行顺序"}},[v._v("#")]),v._v(" 执行顺序")]),v._v(" "),e("ul",[e("li",[v._v("单个组件：\n"),e("ul",[e("li",[v._v("挂载: "),e("code",[v._v("beforeCreate")]),v._v(" -> "),e("code",[v._v("created")]),v._v(" -> "),e("code",[v._v("beforeMount")]),v._v(" -> "),e("code",[v._v("mounted")])]),v._v(" "),e("li",[v._v("更新: "),e("code",[v._v("beforeUpdate")]),v._v(" -> "),e("code",[v._v("updated")])]),v._v(" "),e("li",[v._v("销毁: "),e("code",[v._v("beforeDestroy")]),v._v(" -> "),e("code",[v._v("destroyed")])])])]),v._v(" "),e("li",[v._v("父子组件：\n"),e("ul",[e("li",[v._v("挂载: 父"),e("code",[v._v("beforeCreate")]),v._v("-> 父"),e("code",[v._v("created")]),v._v(" -> 父"),e("code",[v._v("beforeMount")]),v._v(" -> 子"),e("code",[v._v("beforeCreate")]),v._v(" -> 子"),e("code",[v._v("created")]),v._v(" -> 子"),e("code",[v._v("beforeMount")]),v._v(" -> 子"),e("code",[v._v("mounted")]),v._v(" -> 父"),e("code",[v._v("mounted")])]),v._v(" "),e("li",[v._v("更新: 父"),e("code",[v._v("beforeUpdate")]),v._v(" -> 子"),e("code",[v._v("beforeUpdate")]),v._v(" -> 子"),e("code",[v._v("updated")]),v._v(" -> 父"),e("code",[v._v("updated")])]),v._v(" "),e("li",[v._v("销毁: 父"),e("code",[v._v("beforeDestroy")]),v._v(" -> 父"),e("code",[v._v("beforeDestroy")]),v._v(" -> 子"),e("code",[v._v("destroyed")]),v._v(" -> 父"),e("code",[v._v("destroyed")])])])])]),v._v(" "),e("h4",{attrs:{id:"组件类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件类型"}},[v._v("#")]),v._v(" 组件类型")]),v._v(" "),e("ul",[e("li",[v._v("全局组件: 可以在任何组件中直接使用，不需要引入，在组件的模板中使用")]),v._v(" "),e("li",[v._v("局部组件")]),v._v(" "),e("li",[v._v("函数式组件")]),v._v(" "),e("li",[v._v("异步组件")])]),v._v(" "),e("h4",{attrs:{id:"组件通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件通信"}},[v._v("#")]),v._v(" 组件通信")])])}),[],!1,null,null,null);_.default=o.exports}}]);